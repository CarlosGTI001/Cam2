name: Build and Release APK

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        flavor: [SSDMobilenet, CaffeSSD]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 33
        build-tools: 35.0.1
        ndk: 26.3.11579264

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Clean project
      run: ./gradlew clean

    - name: Build ${{ matrix.flavor }} APK
      run: ./gradlew assemble${{ matrix.flavor }}Release --stacktrace --info

    - name: Get version name
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
          echo "version=dev-${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
        fi

    - name: Generate keystore for signing
      run: |
        keytool -genkeypair \
          -alias release-key \
          -keyalg RSA \
          -keysize 2048 \
          -validity 10000 \
          -keystore release.keystore \
          -storepass github1234 \
          -keypass github1234 \
          -dname "CN=GitHub Release, OU=CI/CD, O=GitHub Actions, L=Cloud, ST=Virtual, C=US"

    - name: Sign ${{ matrix.flavor }} APK
      run: |
        $ANDROID_HOME/build-tools/35.0.1/apksigner sign \
          --ks release.keystore \
          --ks-key-alias release-key \
          --ks-pass pass:github1234 \
          --key-pass pass:github1234 \
          --out app-${{ matrix.flavor }}-${{ steps.version.outputs.version }}-release-signed.apk \
          app/build/outputs/apk/${{ matrix.flavor }}/release/app-${{ matrix.flavor }}-release-unsigned.apk

    - name: Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: apk-${{ matrix.flavor }}-${{ steps.version.outputs.version }}
        path: app-${{ matrix.flavor }}-${{ steps.version.outputs.version }}-release-signed.apk
        retention-days: 90

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Get version name
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: artifacts/*/*.apk
        body: |
          ## SNPE Camera App Release ${{ steps.version.outputs.version }}
          
          This release includes two APK flavors:
          - **SSDMobilenet**: Object detection using SSD MobileNet model
          - **CaffeSSD**: Object detection using Caffe SSD model
          
          All APKs are signed and ready for installation.
          
          ### Installation
          1. Download the desired APK
          2. Enable "Install from unknown sources" in Android settings
          3. Install the APK
          4. Grant camera permissions when prompted
          
          ### Requirements
          - Android 7.0+ (API 24+)
          - Qualcomm Snapdragon device (for optimal performance)
          - Camera permission required